package server

import (
	"log"
	"net/http"
)

// balanceRequestLeastConns - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º (Least Connections)
func (lb *LoadBalancer) balanceRequestLeastConns(w http.ResponseWriter, r *http.Request) {
	peer := lb.pool.GetLeastBusyBackend()
	if peer == nil { // –≤—Å–µ –º–µ—Ä—Ç–≤—ã
		log.Printf("FATAL-ERROR: ALL BACKEND-SERVERS ARE DOWN!üíÄ")
		http.Error(w, "Sorry, the service is currently unavailable. Please try again later.", http.StatusServiceUnavailable)
		return
	}
	peer.IncrementConn()
	defer peer.DecrementConn()

	peer.ReverseProxy.ServeHTTP(w, r)
	return
}
