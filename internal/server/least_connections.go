package server

import (
	"loadbalancer/internal/errors"
	"log"
	"net/http"
)

// BalanceRequestLeastConns - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º (Least Connections)
func (lb *LoadBalancer) BalanceRequestLeastConns(w http.ResponseWriter, r *http.Request) {
	peer := lb.pool.GetLeastBusyBackend()
	if peer == nil { // –≤—Å–µ –º–µ—Ä—Ç–≤—ã
		log.Printf("FATAL-ERROR: ALL BACKEND-SERVERS ARE DOWN!üíÄ")
		err := errors.NewAPIError(http.StatusServiceUnavailable, "Sorry, the service is currently unavailable. Please try again later.")
		w.Header().Set("Content-Type", "application/json")
		w.WriteHeader(err.Code)
		w.Write(err.ToJSON())
		return
	}
	peer.IncrementConn()
	defer peer.DecrementConn()

	peer.ReverseProxy.ServeHTTP(w, r)
	return
}
